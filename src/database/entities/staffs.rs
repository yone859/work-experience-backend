//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "staffs")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub staff_name: Option<String>,
    pub department_id: Option<i32>,
    #[sea_orm(column_name = "Joining_date")]
    pub joining_date: Option<Date>,
    pub remark: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::departments::Entity",
        from = "Column::DepartmentId",
        to = "super::departments::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Departments,
}

impl Related<super::departments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Departments.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
