//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "work_experience")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub project_no: i32,
    pub project_title: Option<String>,
    pub member_headcount: Option<i32>,
    pub participate_date: Option<Date>,
    pub leave_date: Option<Date>,
    pub program_language: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub pjt_content: Option<String>,
    pub work_kind: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::dev_tool::Entity")]
    DevTool,
    #[sea_orm(has_many = "super::pjt_support_tool::Entity")]
    PjtSupportTool,
}

impl Related<super::dev_tool::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DevTool.def()
    }
}

impl Related<super::pjt_support_tool::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PjtSupportTool.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
